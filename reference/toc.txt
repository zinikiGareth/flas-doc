Introduction
1 Lexical Conventions
  1.1 Unit Translation Types
  1.2 Indentation
    Comments
    Nesting
  1.3 Names
  1.4 Constants
  1.5 White Space
  1.6 Punctuation Characters
  1.7 Symbols and Operators
2 Declarations and Scopes
  2.1 Functions
  2.2 Data Types
  2.3 Contracts
  2.4 Actors
  2.5 Scoped Names
3 Lifecycle
  3.1 Wiring up
  3.2 Lifecycle contract
    $Lifecycle.init$
    $Lifecycle.load$
    $Lifecycle.state$
    $Lifecycle.ready$
    $Lifecycle.closing$
  3.1c Containing Environments
    Browser
    Phone Apps
    Microservice Containers
    Embedded in Applications
4 Expressions
  4.1 Literals
    Numeric Literals
    String Literals
    List Literals
    Tuples
    Hash Literals
  4.2 Function Calls
  4.3 Unary Operators
  4.4 Binary Operators
  4.5 Parenthetical Expressions
5 Structs, Entities and Unions
  5.1 $struct$
  5.2 $entity$
  5.3 $union$
6 Crobags
  6.1 API
    $ctor new$
    $method put key value$
    $method insert key value$
    $method upsert key value$
  6.1c A Language Feature
  6.2c Use in Templates
  6.3c Collision Resistance
  6.4c Client-Side Caching
  6.5c Natural and Arbitrary Ordering
  6.6c Favorites
  6.7c Events
  6.8c Usage Patterns
7 Functions ['function-definitions']
  7.1 Pattern Matching
  7.2 Guarded Equations [guarded-functions]
  7.3 Function Nesting
  7.4 Tuple Definitions ['tuple-definitions']
  7.5 Standalone Methods ['standalone-method-definitions']
  7.6 Functions with State
  7.1c Evaluation
    Pattern Matching
    Guards
  7.2c Scoping
  7.3c Standalone Methods
8 Type Checking and Inference
  8.1 Type Declarations
  8.2 Type Checking
  8.3 Type Inference
  8.4 Overriding the Type Mechanism
  8.1c Type Inference Algorithm
9 Contracts
  9.1 Contract Varieties [contract-varieties]
  9.2 Contract Methods
  9.3 Optional [optional-methods]
  9.1c Role of Contracts
  9.2c Directionality
  9.3c Testing
10 Objects [objects]
  10.1 Object State
  10.2 Object Constructors
  10.3 Object Methods
  10.4 Services
  10.5 Nested Scope
  10.1c Not an Object-Oriented Language
11 Methods [method-definitions]
  11.1 Guards
  11.2 Sending Messages
  11.3 Updating State
  11.1c Messages
  11.2c Conflicts
12 Agents [agents]
  12.1 Agent State
  12.2 Service References
  12.3 Contract Implementations
  12.4 Nested Definitions
  12.1c Non-Visual Coordinators
13 Cards
  13.1 Card State
  13.2 Contract Implementations
  13.3 Service References
  13.4 Templates
  13.5 Event Handlers
  13.6 Nested Definitions
  13.1c What Else?
14 Handlers ['handler-definitions']
  14.1 Lambda Variables
  14.2 Construction
15 Services
  15.1 Contract Implementations
  15.2 Service References
  15.3 Nested Definitions
  15.1c Beyond the Scope
  15.2c Stateless
  15.3c Security
  15.4c On the Client Side
  15.5c What Else?
16 Contract Implementation [contract-implementation]
  16.1 Method Implementations
  16.2 State
  16.3 Variables in Scope
17 Templates [templates]
  17.1 Template Definitions
  17.2 Template Fields
  17.3 Template Bindings
  17.4 Template Styling
  17.5 Template Events
  17.6 Containers
  17.7 Punnets
  17.8 Nested Templates and Variable Chains
  17.9 Distributing Unions over Nested Templates
  17.1c MVC
  17.2c Development Cycle
  17.3c A Mental Model
  17.4c Intelligent Redisplay
  17.5c Card Templates
  17.6c Object Templates
  17.7c Content Bindings
    Conditional Bindings
  17.8c Styling
    Conditional Styling
    Nested Conditionals
  17.9c Event Affordance
  17.10c Containers
  17.11c Lists and Crobags
  17.12c Punnets
18 Event Handlers [event-handlers]
  18.1 Event Specification
19 Resource Management
  19.1c TBD
20 Full Grammar
21 Installing FLAS
  21.1 Downloading
  21.2 Installing
22 Command Reference
  22.1 $flas$
  22.2 $flas-lsp$
23 HTML Visual Designs [html-splitter]
